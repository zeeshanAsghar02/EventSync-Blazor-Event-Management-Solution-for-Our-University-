@page "/event-registration"
@layout PrimaryLayout
@inject NavigationManager na
@inject IJSRuntime JSRuntime

<PageTitle>Event Registration</PageTitle>

<!-- Include necessary CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<style>
    body {
        background-image: url('');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        min-height: 100vh;
        margin: 0;
        font-family: 'Poppins', sans-serif;
    }

    .form-control:focus,
    .input-group:focus-within {
        box-shadow: 0 0 0 0.25rem rgba(116, 0, 116, 0.25);
    }

    .btn-primary:focus {
        box-shadow: none;
    }

    .input-group {
        margin-bottom: 1rem; /* Reduce spacing between input fields */
    }

    .registration-container {
        width: 400px;
        padding: 20px; /* Add padding */
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
        padding-top: 100px; /* Add padding to the top to prevent collision with the navigation bar */
        padding-bottom: 60px; /* Add padding to the bottom to prevent collision with the footer */
        background-color: rgba(255, 255, 255, 0.9); /* Add semi-transparent background for better readability */
        border-radius: 8px;
        transition: transform 0.3s ease, box-shadow 0.3s ease; /* Add transition for transform and box-shadow */
    }

    .registration-container:hover,
    .registration-container:focus-within {
        transform: translateY(-10px); /* Hover effect to move the form forward */
        box-shadow: 0 0 15px rgba(116, 0, 116, 0.5); /* Lighting effect on hover */
    }

    .registration-header {
        margin-bottom: 2rem; /* Adjust spacing for the header */
    }

    .organizer-message {
        text-align: center;
        color: #740074;
        font-weight: bold;
        font-size: 1.2rem;
        margin-top: 2rem;
    }
</style>

<!-- Event Registration page content -->
<div class="container-fluid">
    <div class="row justify-content-center align-items-center" style="min-height: 100vh;">
        <div class="col-md-6">
            <div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
                <div class="registration-container">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="registration-header text-center">
                                <h2>Event Registration</h2>
                            </div>

                            <form @onsubmit="HandleRegistrationSubmit">
                                <div class="input-group">
                                    <InputText id="eventName" class="form-control" @bind-Value="eventname" placeholder="Event Name" required />
                                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputText id="eventDescription" class="form-control" @bind-Value="description" placeholder="Description" required />
                                    <span class="input-group-text"><i class="fas fa-info-circle"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputDate id="eventStartDate" class="form-control" @bind-Value="startDate" placeholder="Start Date" required />
                                    <span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputText id="eventStartTime" type="time" class="form-control" @bind-Value="startTime" required />
                                    <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputDate id="eventEndDate" class="form-control" @bind-Value="endDate" placeholder="End Date" required />
                                    <span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputText id="eventEndTime" type="time" class="form-control" @bind-Value="endTime" required />
                                    <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                </div>
                                <div class="input-group">
                                    <InputNumber id="eventPrice" class="form-control" @bind-Value="price" placeholder="Price" required />
                                    <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                                </div>

                                <div class="input-group">
                                    <select class="form-control" @bind="venueid" required>
                                        <option value="0" disabled selected>Select Venue</option>
                                        @foreach (var venue in venues)
                                        {
                                            <option value="@venue.VenueId">@venue.VenueName</option>
                                        }
                                        <option value="-1">Other</option> <!-- Add 'Other' option -->
                                    </select>
                                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                </div>
                                <div class="input-group">
                                    <select class="form-control" @bind="eventtypeid" required>
                                        <option value="0" disabled selected>Select Event Type</option>
                                        @foreach (var eventType in eventTypes)
                                        {
                                            <option value="@eventType.EventTypeId">@eventType.EventTypeName</option>
                                        }
                                        <option value="-1">Other</option> <!-- Add 'Other' option -->
                                    </select>
                                    <span class="input-group-text"><i class="fas fa-list-alt"></i></span>
                                </div>
                                @if (IsOrganizer())
                                {
                                    <button type="submit" class="btn btn-primary btn-block" style="background-color: #740074;">Register</button>
                                }
                                else
                                {
                                    <div class="organizer-message">
                                        Only event organizers can create an event.
                                    </div>
                                }
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    string eventname;
    string description;
    DateTime startDate;
    string startTime;
    DateTime endDate;
    string endTime;
    int venueid = 0;  // Default value set to 0
    int eventtypeid = 0;  // Default value set to 0
    int organizerid;
    decimal price;

    List<ModelEventType> eventTypes = new List<ModelEventType>();
    List<ModelVenue> venues = new List<ModelVenue>();

    protected override async Task OnInitializedAsync()
    {
        organizerid = Session.CurrentUser.UserId; // Assign current user's ID to organizerid
        await LoadEventTypes();
        await LoadVenues();
    }

    private async Task LoadEventTypes()
    {
        await Task.Run(() =>
        {
            eventTypes = DbEventType.GetEventTypeInformation();
        });
    }

    private async Task LoadVenues()
    {
        await Task.Run(() =>
        {
            venues = DbVenue.GetVenueInformation();
        });
    }

    private void HandleRegistrationSubmit()
    {
        var newEvent = new ModelEvent
            {
                EventName = eventname,
                Description = description,
                StartTime = startDate.Add(TimeSpan.Parse(startTime)),
                EndTime = endDate.Add(TimeSpan.Parse(endTime)),
                VenueId = venueid,
                EventTypeId = eventtypeid,
                OrganizerId = organizerid,
                Price = price,
            };

        DbEvent.SaveEventInformation(newEvent);
        na.NavigateTo("/find-events"); // Redirect to login after successful registration
    }

    // Method to check if the current user is an organizer
    private bool IsOrganizer()
    {
        return Session.CurrentUser.UserRole == "Organizer";
    }
}

   
